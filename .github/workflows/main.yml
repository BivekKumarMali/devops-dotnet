name: Production

on:
  push:
    branches: [master]

jobs:
  build:
    runs-on: windows-latest
    
    env:
      IIS_SERVER_COMPUTER_NAME: ${{ secrets.IIS_SERVER_COMPUTER_NAME }}
      IIS_WEBSITE_NAME: ${{ secrets.IIS_WEBSITE_NAME }}
      IIS_SERVER_USERNAME: ${{ secrets.IIS_SERVER_USERNAME }}
      IIS_SERVER_PASSWORD: ${{ secrets.IIS_SERVER_PASSWORD }}
      RECYCLE_APP_NAME: ${{ secrets.RECYCLE_APP_NAME }}

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.301
      - name: Caching
        id: mycache
        uses: actions/cache@v2
        with:
          path: ./Application/obj
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Install dependencies
        if: steps.mycache.outputs.cache-hit != 'true'
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore ./Application/Application.csproj
      - name: Publish
        run: dotnet publish -c Release
      - name: Archive build
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: publish
          path: Application/bin/Release/netcoreapp3.1/publish
      - name: Download build
        uses: actions/download-artifact@v2
        with:
          name: publish
      - name: Zip Folder
        shell: cmd
        run: |
            7z a -tzip publish.zip ./
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v14
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: DotNetApplication
          environment_name: Dotnetapplication-env
          version_label: 12345
          region: us-east-2
          deployment_package: publish.zip
      - name: Stop Application Polling
        shell: cmd
        run: '"C:/Program Files (x86)/IIS/Microsoft Web Deploy V3/msdeploy.exe" -verb:sync -allowUntrusted -source:recycleApp -dest:recycleApp="${{ env.RECYCLE_APP_NAME }}",recycleMode="StopAppPool",computerName="${{env.IIS_SERVER_COMPUTER_NAME}}/msdeploy.axd?site=${{ env.IIS_WEBSITE_NAME }}",username="${{ env.IIS_SERVER_USERNAME }}",password="${{ env.IIS_SERVER_PASSWORD }}",AuthType="Basic"'
      - name: IIS Deploy
        shell: cmd
        run: '"C:/Program Files (x86)/IIS/Microsoft Web Deploy V3/msdeploy.exe" -verb:sync -allowUntrusted -usechecksum -source:contentPath="D:\a\devops-dotnet\devops-dotnet\Application\bin\Release\netcoreapp3.1\publish\" -dest:contentPath="${{ env.RECYCLE_APP_NAME }}",ComputerName="${{env.IIS_SERVER_COMPUTER_NAME}}/msdeploy.axd?site=${{ env.IIS_WEBSITE_NAME }}",UserName="${{ secrets.IIS_SERVER_USERNAME }}",Password="${{ secrets.IIS_SERVER_PASSWORD }}",AuthType="Basic"'
      - name: Start Application Polling
        shell: cmd
        run: '"C:/Program Files (x86)/IIS/Microsoft Web Deploy V3/msdeploy.exe" -verb:sync -allowUntrusted:True -source:recycleApp -dest:recycleApp="${{ env.RECYCLE_APP_NAME }}",recycleMode="StartAppPool",ComputerName="${{env.IIS_SERVER_COMPUTER_NAME}}/msdeploy.axd?site=${{ env.IIS_WEBSITE_NAME }}",UserName="${{ secrets.IIS_SERVER_USERNAME }}",Password="${{ secrets.IIS_SERVER_PASSWORD }}",AuthType="Basic"'

  
